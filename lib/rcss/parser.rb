#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module RCSS
  class Parser < Racc::Parser


  require_relative 'handler'

  attr_reader :handler

  def initialize tokenizer, handler = Handler.new
    @tokenizer = tokenizer
    @handler   = handler
    super()
  end

  def next_token
    token = @tokenizer.next_token

    while token == ["", ""] do
      token = @tokenizer.next_token
    end

    token
  end

  def parse
    do_parse
    handler
  end
##### State transition tables begin ###

racc_action_table = [
     5,    16,    10,    14,     5,    16,    16,    14,    14,    16,
    16,    14,    14,    16,     9,    14,     5,     6,     5 ]

racc_action_check = [
     8,     8,     6,     8,    12,    12,    21,    12,    21,    13,
    18,    13,    18,    23,     4,    23,     3,     1,     0 ]

racc_action_pointer = [
    16,    17,   nil,    14,    10,   nil,     2,   nil,    -2,   nil,
   nil,   nil,     2,     6,   nil,   nil,   nil,   nil,     7,   nil,
   nil,     3,   nil,    10,   nil,   nil ]

racc_action_default = [
   -16,   -16,    -1,    -2,   -16,   -10,   -16,    -3,   -16,   -11,
    26,    -4,   -16,   -16,   -12,   -13,   -15,    -5,   -16,   -14,
    -6,   -16,    -7,   -16,    -8,    -9 ]

racc_goto_table = [
    11,    12,     8,    19,    17,    20,    21,     1,   nil,   nil,
    22,    23,    19,    24,    19,    25,    13,   nil,     2,   nil,
    18,     7 ]

racc_goto_check = [
     6,     7,     5,     8,     6,     6,     7,     1,   nil,   nil,
     6,     7,     8,     6,     8,     6,     3,   nil,     2,   nil,
     3,     2 ]

racc_goto_pointer = [
   nil,     7,    18,     8,   nil,    -2,    -8,    -7,    -9 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,   nil,   nil,   nil,    15 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 7, :_reduce_none,
  1, 8, :_reduce_none,
  2, 8, :_reduce_none,
  3, 9, :_reduce_none,
  4, 9, :_reduce_none,
  4, 9, :_reduce_none,
  5, 9, :_reduce_none,
  5, 9, :_reduce_none,
  6, 9, :_reduce_none,
  1, 10, :_reduce_10,
  1, 11, :_reduce_11,
  1, 12, :_reduce_12,
  1, 13, :_reduce_none,
  2, 13, :_reduce_none,
  1, 14, :_reduce_15 ]

racc_reduce_n = 16

racc_shift_n = 26

racc_token_table = {
  false => 0,
  :error => 1,
  :SELECTOR => 2,
  :PROPERTY => 3,
  :BEGINRULE => 4,
  :ENDRULE => 5 }

racc_nt_base = 6

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SELECTOR",
  "PROPERTY",
  "BEGINRULE",
  "ENDRULE",
  "$start",
  "stylesheet",
  "rules",
  "rule",
  "selector",
  "begin_rule",
  "end_rule",
  "properties",
  "property" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

def _reduce_10(val, _values, result)
 @handler.selector(val[0]) 
    result
end

def _reduce_11(val, _values, result)
 @handler.begin_rule 
    result
end

def _reduce_12(val, _values, result)
 @handler.end_rule 
    result
end

# reduce 13 omitted

# reduce 14 omitted

def _reduce_15(val, _values, result)
 @handler.scalar(result) 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module RCSS
